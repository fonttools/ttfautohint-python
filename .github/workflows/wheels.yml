name: Wheels

on: [push, pull_request]

jobs:
  build:
    name: Build wheel ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-20.04", "windows-2019", "macos-11" ]
    env:
      BUILD_COMMIT: HEAD
      CIBW_BEFORE_ALL_LINUX: sh ci/docker-fixes.sh
      CIBW_BEFORE_ALL_MACOS: sh ci/osx-fixes.sh
      CIBW_ARCHS_MACOS: x86_64 arm64 universal2
      CIBW_SKIP: "cp38-macosx* cp37-macosx* cp36-macosx*"
    steps:
      - name: Get gnulib(Win)
        uses: actions/checkout@master
        if: startsWith(matrix.os, 'windows')
        with:
          repository: coreutils/gnulib
          path: D:\a\ttfautohint-py\ttfautohint-py
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Update path (Mac)
        if: startsWith(matrix.os, 'macos')
        run: |
          echo "/usr/local/opt/libtool/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/ragel/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/automake/bin" >> $GITHUB_PATH
      - name: Update environment (Win)
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "GNULIB_SRCDIR=D:\a\ttfautohint-py\ttfautohint-py" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.0.0a2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl
